---
- name: Setup local environment
  hosts: localhost
  vars:
    supported_os:
      - Darwin # macOS
      - Debian # Ubuntu, Debian
    nsfw_mode: "{{ lookup('env', 'OJ39_ANSIBLE_INSTALL_NSFW') | default(false) | bool }}"

  tasks:
    - name: Check if OS is supported
      ansible.builtin.assert:
        that: ansible_facts['os_family'] in supported_os
        fail_msg: "Unsupported OS: {{ ansible_facts['os_family'] }}"

    - name: Output NSFW Mode
      ansible.builtin.debug:
        var: nsfw_mode

    - name: Include OS-specific vars
      ansible.builtin.include_vars: "{{ item }}"
      with_fileglob:
        - "vars/{{ ansible_facts['os_family'] | lower }}/*.yml"

    - name: Include common vars
      ansible.builtin.include_vars: "{{ item }}"
      with_fileglob:
        - "vars/common/*.yml"

    - name: Include OS-specific tasks
      ansible.builtin.include_tasks: "{{ item }}"
      with_fileglob:
        - "tasks/{{ ansible_facts['os_family'] | lower }}/*.yml"

    - name: Include common tasks
      ansible.builtin.include_tasks: "{{ item }}"
      with_fileglob:
        - "tasks/common/*.yml"

    ## REMOVE BELOW
    - name: Get contents of .bashrc or .zshrc
      ansible.builtin.command: cat ~/.bashrc
      register: bashrc_contents
      ignore_errors: true
      changed_when: false
      when: ansible_os_family == "Debian"

    - name: Get contents of .zshrc
      ansible.builtin.command: cat ~/.zshrc
      register: zshrc_contents
      ignore_errors: true
      changed_when: false
      when: ansible_os_family == "Darwin"

    - name: Debug .bashrc contents
      ansible.builtin.debug:
        var: bashrc_contents.stdout
      when: bashrc_contents.stdout is defined

    - name: Debug .zshrc contents
      ansible.builtin.debug:
        var: zshrc_contents.stdout
      when: zshrc_contents.stdout is defined

  # handlers:
  #   - import_tasks: handlers/*.yml
