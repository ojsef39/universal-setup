- name: Setup Zsh
  tags: zsh
  block:
    - name: Remove .bashrc
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.zshrc"
        state: absent
      when: ansible_os_family == "Darwin"

    - name: Create .zshrc in home
      ansible.legacy.file:
        path: "{{ ansible_env.HOME }}/.zshrc"
        state: touch
        mode: "0644"
      when: ansible_os_family == "Darwin"

    - name: Add OMZ block to .zshrc
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        block: "{{ rc_block_zsh_omz }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - RC BLOCK ZSH OMZ"
      become: true
      when: ansible_os_family == "Darwin"

    - name: Add lines to .zshrc
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        regexp: "^{{ zshrc_lines_item.split('=')[0] }}="
        line: "{{ zshrc_lines_item }}"
      loop: "{{ zshrc_lines }}"
      loop_control:
        loop_var: zshrc_lines_item
      become: true
      when: ansible_os_family == "Darwin"

    - name: Add NSWF lines to .zshrc
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        regexp: "^{{ zshrc_lines_nswf.split('=')[0] }}="
        line: "{{ zshrc_lines_nsfw_item }}"
      loop: "{{ zshrc_lines_nswf }}"
      loop_control:
        loop_var: zshrc_lines_nsfw_item
      become: true
      when: ansible_os_family == "Darwin" and not nsfw_mode

    - name: Add block to .zshrc
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        block: "{{ rc_block }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - RC BLOCK"
      become: true
      when: ansible_os_family == "Darwin"

    - name: Add OS specific block to .zshrc
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        block: "{{ rc_block_zsh }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - RC BLOCK ZSH"
      become: true
      when: ansible_os_family == "Darwin"

    ## CI DEBUG
    - name: Show contents of .zshrc in CI
      ansible.builtin.command: cat "{{ ansible_env.HOME }}/.zshrc"
      register: zshrc_contents
      ignore_errors: true
      changed_when: false
      when: ansible_os_family == "Darwin" and is_ci | bool
