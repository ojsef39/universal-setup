- name: Setup Zsh
  tags: zsh
  vars:
    zsh_custom: "{{ lookup('env', 'ZSH_CUSTOM') | default(ansible_env.HOME + '/.oh-my-zsh/custom', true) }}"
  block:
    - name: (ZSH) Check if zsh_custom is set
      ansible.builtin.assert:
        that:
          - zsh_custom is defined
          - zsh_custom | length > 0
        fail_msg: "ZSH_CUSTOM or zsh_custom is not defined use -e zsh_custom=$ZSH_CUSTOM: {{ zsh_custom }}"

    - name: (ZSH) Check if OMZ repository exists
      ansible.builtin.stat:
        path: "~/.oh-my-zsh"
      register: omz_repo

    - name: (ZSH) Clone OMZ repository
      ansible.builtin.git:
        repo: "https://github.com/ohmyzsh/ohmyzsh.git"
        dest: "~/.oh-my-zsh"
      when: not omz_repo.stat.exists

    - name: (ZSH) Clone spaceship-prompt repository
      ansible.builtin.git:
        repo: "https://github.com/spaceship-prompt/spaceship-prompt.git"
        dest: "{{ zsh_custom }}/themes/spaceship-prompt"
        depth: 1
        update: true

    - name: (ZSH) Create symbolic link for spaceship theme
      ansible.builtin.file:
        src: "{{ zsh_custom }}/themes/spaceship-prompt/spaceship.zsh-theme"
        dest: "{{ zsh_custom }}/themes/spaceship.zsh-theme"
        state: link
      when:
        - not ansible_check_mode
        - not is_ci

    - name: (ZSH) Remove .zshrc
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.zshrc"
        state: absent

    - name: (ZSH) Create .zshrc
      ansible.legacy.file:
        path: "{{ ansible_env.HOME }}/.zshrc"
        state: touch
        mode: "0644"

    - name: (ZSH) Add OMZ block to .zshrc
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        block: "{{ rc_block_zsh_omz }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - RC BLOCK ZSH OMZ"

    - name: (ZSH) Add lines to .zshrc
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        line: "{{ zshrc_lines_item }}"
      loop: "{{ zshrc_lines }}"
      loop_control:
        loop_var: zshrc_lines_item

    - name: (ZSH) Add personal lines to .zshrc
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        line: "{{ zshrc_lines_pers_item }}"
      loop: "{{ zshrc_lines_pers }}"
      loop_control:
        loop_var: zshrc_lines_pers_item
      when: mode == 'personal'

    - name: (ZSH) Add personal ENV to .zshrc
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        line: "export OJ39_ANSIBLE_MODE=personal"
      when: mode == 'personal'

    - name: (ZSH) Add script block to .zshrc
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        block: "{{ rc_block }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - RC BLOCK"

    - name: (ZSH) Add OS specific block to .zshrc
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        block: "{{ rc_block_zsh }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - RC BLOCK ZSH"

    ## CI DEBUG
    - name: (ZSH) Show contents of .zshrc in CI
      ansible.builtin.command: cat "{{ ansible_env.HOME }}/.zshrc"
      register: zshrc_contents
      ignore_errors: true
      changed_when: false
      when: is_ci | bool
