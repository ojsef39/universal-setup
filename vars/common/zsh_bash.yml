---
rc_block: |
  autoload -Uz compinit && compinit
  fastfetch
  tmux list-sessions
  alias x="exit"
  bindkey -r "^j"

  ## Get Setup and run it
  oj39_ansible() {
      echo "Enter the branch name (default: main): "
      read branch
      branch=${branch:-main}
      curl "https://raw.githubusercontent.com/ojsef39/universal-setup/${branch}/setup.sh" | bash -s -- --branch "${branch}"
  }

  ## NVIM TMUX Scripts
  n() {
      local session_name=$(echo "$PWD" | rev | cut -d'/' -f1-5 | rev)
      if [ -z "$TMUX" ]; then
          if tmux has-session -t "$session_name" 2>/dev/null; then
              tmux attach-session -t "$session_name"
          else
              tmux new-session -s "$session_name" "nvim $*"
          fi
      else
          nvim "$@"
      fi
  }
  # Enable completion for the 'n' alias
  compdef _files n

  t() {
      local session_name=$(echo "$PWD" | rev | cut -d'/' -f1-5 | rev)
      if [ -z "$TMUX" ]; then
          if tmux has-session -t "$session_name" 2>/dev/null; then
              tmux attach-session -t "$session_name"
          else
              tmux new-session -s "$session_name"
          fi
      else
        echo "Already in a tmux session"
      fi
  }

  ###-begin-gitlab-ci-local-completions-###
  #
  # yargs command completion script
  #
  # Installation: /opt/homebrew/bin/gitlab-ci-local completion >> ~/.zshrc
  #    or /opt/homebrew/bin/gitlab-ci-local completion >> ~/.zprofile on OSX.
  #
  _gitlab-ci-local_yargs_completions()
  {
    local reply
    local si=$IFS
    IFS=$'
  ' reply=($(COMP_CWORD="$((CURRENT-1))" COMP_LINE="$BUFFER" COMP_POINT="$CURSOR" /opt/homebrew/bin/gitlab-ci-local --get-yargs-completions "${words[@]}"))
    IFS=$si
    _describe 'values' reply
  }
  compdef _gitlab-ci-local_yargs_completions gitlab-ci-local
  export GCL_TIMESTAMPS=true # or --timestamps: show timestamps in logs
  export GCL_MAX_JOB_NAME_PADDING=30 # or --maxJobNamePadding: limit padding around job name
  ###-end-gitlab-ci-local-completions-###
